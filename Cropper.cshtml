
@{
    Layout = null;
}

<!DOCTYPE html>

@model JCropMVC.Models.Employee

@{
    ViewBag.Title = "Create";
}

<h2 class="breadcrumb">
    Create Employee Information
</h2>

@using (Html.BeginForm("Create", "Employees", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <hr>
    @Html.ValidationSummary(true)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @class = "" })
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter employee full name...", type = "text" })
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FatherName, new { @class = "" })
        @Html.TextBoxFor(model => model.FatherName, new { @class = "form-control", placeholder = "Enter father name...", type = "text" })
        @Html.ValidationMessageFor(model => model.FatherName)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Designation, new { @class = "" })
        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control", placeholder = "Enter designation name...", type = "text" })
        @Html.ValidationMessageFor(model => model.Designation)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Mobile, new { @class = "" })
        @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control", placeholder = "Enter mobile number...", type = "text" })
        @Html.ValidationMessageFor(model => model.Mobile)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, new { @class = "" })
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "Enter email address...", type = "text" })
        @Html.ValidationMessageFor(model => model.Email)
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.PhotoURL, new { @class = "" })
        <input type="file" id="flPhoto" name="upload">

        <table>
            <tbody>
                <tr>
                    <td>
                        Width: <label id="lblWidth">200px</label>
                        Height: <label id="lblHeight">200px</label>
                    </td>
                    <td>
                        <a href="#" id="hlcropImage" style="vertical-align:top;">Crop Image</a>

                    </td>


                </tr>
                <tr>
                    <td>
                        <div style="height:400px; width:400px; overflow:auto;">
                            <img id="imgEmpPhoto" src="~/Images/Default/emp-blank-avatar.png" alt="Employee Image">
                        </div>
                    </td>
                    <td>
                        <canvas id="canvas" height="5" width="5" style="vertical-align:top;"></canvas>
                    </td>
                </tr>
            </tbody>
        </table>

    </div>
    <p>
        <img id="imgCropped" src="#" style="display:none;">
    </p>

    <input type="hidden" name="avatarCropped" id="avatarCropped">



    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary">
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        var imageCropWidth = 0;
        var imageCropHeight = 0;
        var cropPointX = 0;
        var cropPointY = 0;
        var jcropApi;

        $(document).ready(function () {
            //initCrop();
        });

        $("#hlcropImage").on("click", function (e) {

            /*
            The event.preventDefault() method stops the default action of
            an element from happening. For example: Prevent a submit button
            from submitting a form. Prevent a link from following the URL
            */

            e.preventDefault();
            cropImage();
        });

        function initCrop() {
            $('#imgEmpPhoto').Jcrop({
                onChange: setCoordsAndImgSize,
                aspectRatio: 0, // 1 means will be same for height and weight
                onSelect: setCoordsAndImgSize
            }, function () { jcropApi = this });
        }

        function showCoordinate() {
            $("#lblWidth").text(imageCropWidth + "px");
            $("#lblHeight").text(imageCropHeight + "px");
        }

        function setCoordsAndImgSize(e) {

            imageCropWidth = e.w;
            imageCropHeight = e.h;

            cropPointX = e.x;
            cropPointY = e.y;

            $("#lblWidth").text(imageCropWidth + "px");
            $("#lblHeight").text(imageCropHeight + "px");
        }

        function cropImage() {

            if (imageCropWidth == 0 && imageCropHeight == 0) {
                alert("Please select crop area.");
                return;
            }

            var img = $("#imgEmpPhoto").attr("src");

            /*Show cropped image*/
            showCroppedImage();
        }

        function showCroppedImage() {
            var x1 = cropPointX;
            var y1 = cropPointY;

            var width = imageCropWidth;
            var height = imageCropHeight;
            var canvas = $("#canvas")[0];
            var context = canvas.getContext('2d');
            var img = new Image();
            img.onload = function () {
                canvas.height = height;
                canvas.width = width;
                context.drawImage(img, x1, y1, width, height, 0, 0, width, height);
                $('#avatarCropped').val(canvas.toDataURL());
            };
            img.src = $('#imgEmpPhoto').attr("src");
        }

        function readFile(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                /*Destroy jcrop initialization other wise it will hold it previous image in img tag*/
                if (jcropApi != null) {
                    jcropApi.destroy();
                }
                reader.onload = function (e) {
                    $('#imgEmpPhoto').attr('src', "");
                    var img = $('#imgEmpPhoto').attr('src', e.target.result);

                    /*Current uploaded image size*/
                    var width = img[0].height;
                    var height = img[0].width;
                    $("#lblWidth").text(width + "px");
                    $("#lblHeight").text(height + "px");

                    //InitCrop must call here otherwise it will not work
                    initCrop();
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $('#flPhoto').change(function () {
            readFile(this);
            //initCrop();
        });
    </script>
}